name: Release Draft Sync Server

on:
  push:
    tags:
      - 'v*'
permissions: write-all
env:
  SYNC_STORAGE_PATH: ${{ vars.SYNC_STORAGE_PATH }}
  SYNC_SERVER_PORT: ${{ vars.SYNC_SERVER_PORT }}

jobs:
    Release:
      if: contains(github.ref, 'tags/v')
      runs-on: ubuntu-latest
      outputs: 
        upload_url: ${{ steps.create_release.outputs.upload_url }}
    
      steps:
        - uses: actions/checkout@v3

        - name: Set up Go
          uses: actions/setup-go@v4
          with:
            go-version: '1.20'

        - name: Build
          run: go build -v ./...

        - name: Test
          run: go test -v ./...

        - name: Set environments
          run: env GOOS=linux GOARCH=amd64 
        
        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          with:
            tag_name: Tag ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            draft: true
            prerelease: false

        - name: Build artifacts
          run: go build -o bin/
               
        - name: Upload SyncServer
          uses: actions/upload-artifact@v3
          with:
            name: sync_server.tar.gz
            path: ./bin
        - name: Download release folder
          uses: actions/download-artifact@v1
          with:
            name: sync_server.tar.gz
            path: release

        - name: Upload Linux Asset
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./release
            asset_name: sync_server.tar.gz
            asset_content_type: application/zip
        