name: Workflow Docker Image

on:
  workflow_call:
    inputs:
      os:
        description: Operation system to build docker image for.
        required: true
        type: string 
      architectures:
        description: Architectures to build docker image for.
        required: true
        type: string    
      release:
        description: Number of released version. Not required.
        required: false
        type: string 

env:
  REGISTRY_IMAGE: takecontrolorg/sync_server

jobs:
  prepare-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
              # branch event
              type=ref,event=branch
              # tag event
              type=ref,event=tag
              # pull request event
              type=ref,event=pr
      - name: Rename meta bake definition file
        run: |
          mv "${{ steps.meta.outputs.bake-file }}" "/tmp/bake-meta.json"
      - name: Upload meta bake definition
        uses: actions/upload-artifact@v4
        with:
          name: bake-meta
          path: /tmp/bake-meta.json
          if-no-files-found: error
          retention-days: 1

  build:
    runs-on: ${{ matrix.os != 'linux' && matrix.os || 'ubuntu' }}-latest
    needs: prepare-docker
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(inputs.os) }}
        architecture: ${{ fromJson(inputs.architectures) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: sync_server${{ inputs.release}}-${{ matrix.os }}-${{ matrix.architecture }}
          path: bin/
      - name: Rename sync_server
        working-directory: /bin
        run: |  
          mv sync_server${{ inputs.release}}-${{ matrix.os }}-${{ matrix.architecture }} sync_server
      - name: Download meta bake definition
        uses: actions/download-artifact@v4
        with:
          name: bake-meta
          path: /tmp
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build
        id: bake
        uses: docker/bake-action@v4
        with:
          files: |
            ./docker-bake.hcl
            /tmp/bake-meta.json
          targets: "sync_server_${{ matrix.os }}"
          set: |
            *.tags=
            *.platform=${{ matrix.os }}/${{ matrix.architecture }}
            *.output=type=image,"name=${{ env.REGISTRY_IMAGE }}",push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        id: digits
        run: |
          mkdir -p /tmp/digests
          digest="${{ fromJSON(steps.bake.outputs.metadata)[format('sync_server_{0}', matrix.os) ]['containerimage.digest'] }}"
          echo "digest_name=$(echo ${digest#sha256:})" >>${GITHUB_OUTPUT}
      - name: Create digit file
        run: |
          echo ${{ steps.digits.outputs.digest_name }}
          touch "/tmp/digests/${{ steps.digits.outputs.digest_name }}"
      - name: Upload digest
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: digest-${{ matrix.os }}-${{ matrix.architecture }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge-tags:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download meta bake definition
        uses: actions/download-artifact@v4
        with:
          name: bake-meta
          path: /tmp
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          pattern: digest-*
          path: /tmp/digests
      - name: Unzip digit files
        working-directory: /tmp/digests
        run: |  
            find /tmp/digests/digest-* -type f -exec mv -nv -t '/tmp/digests/' -- {} +
            cd /tmp/digests/
            rm -rf digest-*
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
            docker buildx imagetools create $(jq -cr '.target."docker-metadata-action".tags | map(select(startswith("${{ env.REGISTRY_IMAGE }}")) | "-t " + .) | join(" ")' /tmp/bake-meta.json) \
              $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:$(jq -r '.target."docker-metadata-action".args.DOCKER_META_VERSION' /tmp/bake-meta.json)
  
  clean-artifacts:
      runs-on: ubuntu-latest
      needs: merge-tags
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      steps:
        - name: Clean artifacts          
          if: always()
          uses: geekyeggo/delete-artifact@v4
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            name: |
                bake-meta
                digest-*